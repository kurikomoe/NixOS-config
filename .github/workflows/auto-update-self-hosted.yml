name: "update flakes"

on:
    # push:
    workflow_dispatch:
    schedule:
        - cron: "23 9,23 * * *"
    # push:
    #   paths:
    #     - ".github/workflows/auto-update.yml"

permissions:
    actions: write
    contents: write
    statuses: read

jobs:
    update-flakes:
        runs-on: self-hosted
        env:
            timestamp: "N/A"
        steps:
            - uses: actions/checkout@v4

            - name: update flake
              id: update-flake
              run: |
                # We treat KurikoG14 as the standard
                TARGET="KurikoG14"
                set -ex

                nix_build_once() {
                  # $1: flake attr path
                  nix build "$1" --no-link --print-out-paths
                }

                nix_build_with_retry() {
                  # $1: flake attr path
                  local attr="$1"
                  local out
                  if out=$(nix_build_once "$attr"); then
                    echo "$out"
                    return 0
                  fi
                  echo "nix build failed for $attr, retrying once in 5s..." >&2
                  sleep 5
                  if out=$(nix_build_once "$attr"); then
                    echo "$out"
                    return 0
                  fi
                  echo "nix build failed twice for $attr" >&2
                  return 1
                }

                ATTR=".#nixosConfigurations.${TARGET}.config.system.build.toplevel"

                echo "### 1. Getting current system path..."
                # 使用 nix build 来确保路径是可用的
                OLD_BUILD=$(nix_build_with_retry "$ATTR")

                echo "### 2. Updating flake inputs..."
                # 更新 flake.lock 文件
                nix flake update

                echo "### 3. Getting new system path..."
                NEW_BUILD=$(nix_build_with_retry "$ATTR")

                echo "### 4. Comparing closures..."
                # 使用 || true 防止在有差异时命令失败
                nix store diff-closures ${OLD_BUILD} ${NEW_BUILD} > /tmp/results.txt || true

                # Show updates
                echo "==================================="
                cat /tmp/results.txt
                echo "==================================="

                # 清理输出：
                # 1. 排除顶层的系统元包
                # 2. 排除纯哈希的无意义重建
                grep -v 'nixos-system-' /tmp/results.txt \
                  | grep -v -E '^\s*[0-9a-z]{32}:' \
                  | grep -v -E '^\s*source:' \
                  > /tmp/results.clean.txt || true


                echo "### 5. Checking for meaningful changes..."
                line_count=$(< /tmp/results.clean.txt wc -l)
                if [[ $line_count -gt 0 ]]; then
                  echo "✅ Meaningful changes detected ($line_count lines). Preparing commit."
                  echo "changes_detected=true" >> $GITHUB_OUTPUT
                  echo "commit_body<<EOF" >> $GITHUB_OUTPUT
                  cat /tmp/results.clean.txt >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

                  cachix push kurikomoe $PATHS || true
                  attic push r2 $PATHS || true
                else
                  echo "✅ No meaningful changes detected ($line_count lines). Skipping commit."
                  echo "changes_detected=false" >> $GITHUB_OUTPUT
                fi

            - name: Generate timestamp
              id: timestamp
              run: echo "timestamp=$(date +'%y%m%d.%H%M')" >> $GITHUB_ENV

            - name: Commit Changes
              uses: EndBug/add-and-commit@v9.1.4
              if: steps.update-flake.outputs.changes_detected == 'true'
              with:
                author_name: github-actions[bot]
                author_email: 41898282+github-actions[bot]@users.noreply.github.com
                committer_name: GitHub Actions
                committer_email: 41898282+github-actions[bot]@users.noreply.github.com
                message: |
                  Auto-update:

                  The following package changes were detected in the system closure:
                  ${{ steps.update-flake.outputs.commit_body }}

            # - name: Setup upterm session
            #   uses: lhotari/action-upterm@v1
            #   if: ${{ failure() }}
            #   with:
            #     wait-timeout-minutes: 5

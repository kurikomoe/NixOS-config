# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
let
  mesa_new = pkgs.mesa;
  # mesa_new = pkgs.mesa.overrideAttrs (oldAttrs: {
  #   haveDozen = true;
  #   mesonFlags = oldAttrs.mesonFlags ++ [
  #     (lib.mesonOption "gallium-drivers" (lib.concatStringsSep "," [
  #       "d3d12" # WSL emulated GPU (aka Dozen)
  #       "nouveau" # Nvidia
  #       "radeonsi" # new AMD (GCN+)
  #       "swrast" # software renderer (aka LLVMPipe)
  #       "svga" # VMWare virtualized GPU
  #       "virgl" # QEMU virtualized GPU (aka VirGL)
  #       "zink" # generic OpenGL over Vulkan, experimental
  #     ]))
  #     (lib.mesonOption "vulkan-drivers" (lib.concatStringsSep "," [
  #       "amd" # AMD (aka RADV)
  #       "microsoft-experimental" # WSL virtualized GPU (aka DZN/Dozen)
  #       "nouveau" # Nouveau (aka NVK)
  #       "swrast" # software renderer (aka Lavapipe)
  #     ]))
  #   ];
  # });
in {
  imports = [ ];

  boot.initrd.availableKernelModules = [ ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/home/kuriko/Projects" = {
      device = "/dev/disk/by-uuid/59eb1b70-d82d-4d62-9622-284d1515f849";
      fsType = "ext4";
      options = [ "noatime" "nofail" ];
    };

    # "/tmp/.X11-unix" = {
    #   device = "/mnt/wslg/.X11-unix";
    #   fsType = "bind";
    #   options = [ "nofail" ];
    # };
  };

  # hardware.graphics = {
  #   enable = true;
  #   extraPackages = with pkgs; [
  #     # mesa_new.drivers
  #
  #     # nvidia-vaapi-driver
  #     # intel-vaapi-driver
  #     # amdvlk
  #     #
  #     # khronos-ocl-icd-loader
  #     # intel-ocl
  #     # intel-compute-runtime
  #     # vaapiIntel
  #     # vaapiVdpau
  #     # libvdpau-va-gl
  #
  #     # ocl-icd
  #   ];
  # };

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
